openapi: 3.0.3
info:
  title: Project Wallet API
  version: 1.0.0
  description: Gerenciamento de carteira digital
paths:
  /api/v1/accounts/login/:
    post:
      operationId: v1_accounts_login_create
      description: Autentica um usuário e retorna um token de acesso.
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/accounts/register/:
    post:
      operationId: v1_accounts_register_create
      description: Registra um novo usuário.
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/v1/accounts/token/refresh/:
    post:
      operationId: v1_accounts_token_refresh_create
      description: Verifica a validade de um token de acesso.
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenRefresh'
          description: ''
  /api/v1/accounts/token/verify/:
    post:
      operationId: v1_accounts_token_verify_create
      description: Verifica a validade de um token de acesso.
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenVerify'
          description: ''
  /api/v1/transactions/:
    get:
      operationId: v1_transactions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Transactions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
    post:
      operationId: v1_transactions_create
      tags:
      - Transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/v1/transactions/{id}/:
    get:
      operationId: v1_transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transação.
        required: true
      tags:
      - Transactions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: v1_transactions_update
      description: Atualiza uma transação específica do usuário autenticado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transação.
        required: true
      tags:
      - Transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: v1_transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transação.
        required: true
      tags:
      - Transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: v1_transactions_destroy
      description: Deleta uma transação específica do usuário autenticado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transação.
        required: true
      tags:
      - Transactions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/wallets/:
    get:
      operationId: v1_wallets_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Wallets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWalletList'
          description: ''
    post:
      operationId: v1_wallets_create
      description: Cria uma carteira para o usuário autenticado, se não existir.
      tags:
      - Wallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wallet'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
  /api/v1/wallets/{id}/:
    get:
      operationId: v1_wallets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Carteira.
        required: true
      tags:
      - Wallets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    put:
      operationId: v1_wallets_update
      description: Atualiza a carteira do usuário autenticado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Carteira.
        required: true
      tags:
      - Wallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wallet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    patch:
      operationId: v1_wallets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Carteira.
        required: true
      tags:
      - Wallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    delete:
      operationId: v1_wallets_destroy
      description: Deleta a carteira do usuário autenticado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Carteira.
        required: true
      tags:
      - Wallets
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CustomTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    CustomTokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Login:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PaginatedTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PaginatedWalletList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Wallet'
    PatchedTransaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sender_wallet:
          type: integer
          readOnly: true
        sender_email:
          type: string
          format: email
          readOnly: true
        receiver_email:
          type: string
          format: email
          readOnly: true
        receiver_wallet:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Valor
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Data/Hora
        note:
          type: string
          nullable: true
          title: Observação
    PatchedWallet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Saldo
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Criado em
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Atualizado em
    Registration:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 12
          minLength: 8
        first_name:
          type: string
          title: Primeiro nome
          maxLength: 150
        last_name:
          type: string
          title: Sobrenome
          maxLength: 150
        img_profile:
          type: string
          format: uri
          nullable: true
          title: Imagem de perfil
      required:
      - email
      - password
    StatusEnum:
      enum:
      - pending
      - completed
      - failed
      type: string
      description: |-
        * `pending` - Pendente
        * `completed` - Concluída
        * `failed` - Falhou
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sender_wallet:
          type: integer
          readOnly: true
        sender_email:
          type: string
          format: email
          readOnly: true
        receiver_email:
          type: string
          format: email
          readOnly: true
        receiver_wallet:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Valor
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Data/Hora
        note:
          type: string
          nullable: true
          title: Observação
      required:
      - amount
      - id
      - receiver_email
      - receiver_wallet
      - sender_email
      - sender_wallet
      - status
      - timestamp
    Wallet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Saldo
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Criado em
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Atualizado em
      required:
      - created_at
      - id
      - updated_at
      - user_email
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Wallets
  description: Operações relacionadas a carteira digital.
- name: Transactions
  description: Operações relacionadas a transações.
- name: Accounts
  description: Operações de autenticação e geração de tokens.
